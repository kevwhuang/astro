<section class="m-credentials">
    <form>
        <label for="email">Email</label>

        <input
            aria-label="enter email"
            id="email"
            maxlength="100"
            name="email"
            required
            type="email"
        />

        <label for="password">Password</label>

        <input
            aria-label="enter password"
            id="password"
            maxlength="64"
            minlength="8"
            name="password"
            required
            type="password"
        />

        <p>&nbsp;</p>

        <div>
            <button type="submit">Sign In</button>
            <button type="submit">Register</button>
        </div>
    </form>
</section>

<style lang="scss">
    form {
        display: flex;
        flex-direction: column;
        margin: auto;
        max-width: 400px;

        label {
            margin-bottom: var(--f9);
            opacity: 0.8;
            width: fit-content;

            &:hover {
                opacity: 1;
            }
        }

        input {
            border-radius: var(--f9);
            font-family: monospace;
            font-size: var(--f6);
            margin-bottom: var(--f7);
            padding: var(--f8) var(--f7);

            &:disabled {
                opacity: 0.5;
            }

            &:focus {
                border-color: var(--c5);
            }
        }

        p {
            color: var(--c2);
            line-height: 1.05;
            margin-bottom: var(--f9);
        }

        div {
            display: grid;
            gap: var(--f7);
            grid-template-columns: 1fr 1fr;

            button {
                background: var(--c5);
                border: none;
                border-radius: var(--f9);
                color: var(--c1);
                font-size: var(--f6);
                padding: var(--f8) var(--f7);
                text-align: center;

                &:disabled {
                    opacity: 0.5;
                }

                &:active:not(:disabled) {
                    font-size: calc(0.95 * var(--f6));
                }
            }
        }
    }

    @media screen and (max-width: 480px) {
        form {
            input {
                font-size: var(--f7);
                margin-bottom: var(--f8);
                padding: var(--f9) var(--f8);
            }

            p {
                margin-bottom: var(--f8);
            }

            div {
                gap: var(--f9);
                grid-template-columns: 1fr;

                button {
                    font-size: var(--f7);
                    padding: var(--f9) var(--f8);

                    &:active:not(:disabled) {
                        font-size: var(--f7);
                    }
                }
            }
        }
    }
</style>

<script>
    import { navigate } from 'astro:transitions/client';

    document.addEventListener('astro:page-load', () => {
        const disable = () => elements.forEach(e => e.setAttribute('disabled', ''));
        const enable = () => elements.forEach(e => e.removeAttribute('disabled'));

        const elements = document.querySelectorAll('#email, #password, button[type="submit"]');
        const p = document.querySelector('.m-credentials form p') as HTMLParagraphElement;

        document
            .querySelector<HTMLFormElement>('.m-credentials form')
            ?.addEventListener('submit', async e => {
                e.preventDefault();
                const form = new FormData(e.target as HTMLFormElement);
                disable();

                if ((e.submitter as HTMLButtonElement).innerText === 'Sign In') {
                    const res = await fetch('/api/auth/signin', { body: form, method: 'post' });

                    if (res.status === 400) {
                        p.innerText = 'Email and password do not match.';
                        enable();
                    } else if (res.status === 500) {
                        p.innerText = 'An error has occurred.';
                        enable();
                    } else {
                        p.innerText = 'You are now signed in. Redirecting...';
                        setTimeout(() => navigate('/dashboard'), 2000);
                    }
                } else {
                    const res = await fetch('/api/auth/register', { body: form, method: 'post' });

                    if (res.status === 422) {
                        p.innerText = 'Password must contain at least one letter and one digit.';
                    } else if (res.status === 429) {
                        p.innerText = 'Too many requests. Please try again later.';
                    } else if (res.status === 500) {
                        p.innerText = 'An error has occurred.';
                    } else {
                        p.innerText = 'Thank you for registering!';
                        p.innerText += ' Please confirm your email before signing in.';
                    }

                    enable();
                }
            });
    });
</script>
